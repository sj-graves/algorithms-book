<section>
<title>Modules</title>
<p>
Everything up until now has focused on using Python as a very powerful calculator. To do anything more sophisticated, we must introduce <em>modules</em>. In your IDLE window, select from the menu {File <m>\to</m> New File}. An empty window will open without the familiar <c>>>></c> prompt! As an example of how modules work, let's play with a string method, <c>swapcase()</c>.
</p>
<pre>
foo = 'Hello World!'
for x in foo:
    print(x.swapcase())
</pre>
<p>
Now, save this module as <c>les2_ex1.py</c> in a convenient location. Then select ``Run<nbsp />Module" from the Run menu. Something interesting will appear in the Python Shell window; for instance, what I see is this:
</p>
<pre>
========= RESTART: /Users/sgraves/Documents/Code/python/les2_ex1.py =========
h
E
L
L
O
 
w
O
R
L
D
!
>>>
</pre>
<p>
There are many, many benefits to writing code in modules rather than working extensively in interactive mode. Primary for students is the ability to edit code <mdash /> anyone who has made a mistake in these first two lessons knows fully well how irritating it is to retype incorrect code in interactive mode. The principle downside of using modules is that any output you wish to see must be <c>print</c>ed. For instance, you can change the string <c>foo</c> to any string you choose, and if you then save and run the module it will swap the upper and lower case characters in this new string.
</p>

<p>
Since we are still learning basic concepts, we will continue to use interactive mode whenever it is instructive to do so.
</p>
</section>
