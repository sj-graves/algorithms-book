<section xml:id="sec-SubstCipher-PolyAlph">
    <title>Polyalphabetic substitution</title>


    <introduction>
        <p>
            Polyalphabetic substitution still uses permutations to function, but <em>the permutation changes between characters.</em> This presents sufficient difficulty to decryption that
        </p>
    </introduction>


    <subsection>
        <title>The Vigen&#xe8;re<nbsp /> Cipher</title>
        <p>
            The basis for the Vigen&#xe8;re<nbsp /> cipher is the <em>tabula recta</em>, a <m>26\times 26</m> matrix of letters as shown in <xref ref="fig_tabula_recta" autoname="yes" />.
        </p>
        <figure xml:id="fig_tabula_recta" >
            <caption>The <em>tabula recta</em> used in the \vig cipher and other polyalphabetic substitutions.</caption>
            <image source="./images/tabula_recta.svg" width="75%" />>

        </figure>
        <p>
            Rather than simply using one shift cipher, this tabula recta incorporates every shift cipher. The process for using it is as follows:
            <ol>
                <li><p>Select a keyword or keyphrase.</p></li>
                <li><p>Write the plain text in one line.</p></li>
                <li><p>Write the keyphrase repeatedly beneath the plain text.</p></li>
                <li><p>The letter of the keyphrase determines which row of the tabula recta to look at, and the corresponding letter of the plain text determines which column.</p></li>
            </ol>
        </p>

        <p>
            For instance, if our key phrase is 
                <c>THIS PARROT HAS CEASED TO BE</c>
            and our plain text is
                <c>THATS ONE SMALL STEP FOR A MAN ONE GIANT LEAP FOR MANKIND</c>,
            we would write (blocking the message into 5-character blocks for readability)
        </p>
        <image xml:id="vigenere-example">
            <latex-image-code><![CDATA[
\begin{tikzpicture}[scale=1/3]
\draw \foreach \x/\y/\p/\k in {0/3/T/T, 1/3/H/H, 2/3/A/I, 3/3/T/S, 4/3/S/P, 6/3/O/A, 7/3/N/R, 8/3/E/R, 9/3/S/O, 10/3/M/T, 12/3/A/H, 13/3/L/A, 14/3/L/S, 15/3/S/C, 16/3/T/E, 18/3/E/A, 19/3/P/S, 20/3/F/E, 21/3/O/D, 22/3/R/T, 24/3/A/O, 25/3/M/B, 26/3/A/E, 27/3/N/T, 28/3/O/H, 0/0/N/I, 1/0/E/S, 2/0/G/P, 3/0/I/A, 4/0/A/R, 6/0/N/R, 7/0/T/O, 8/0/L/T, 9/0/E/H, 10/0/A/A, 12/0/P/S, 13/0/F/C, 14/0/O/E, 15/0/R/A, 16/0/M/S, 18/0/A/E, 19/0/N/D, 20/0/K/T, 21/0/I/O, 22/0/N/B, 24/0/D/E}{
(\x+.5,\y+.5) node {\k} (\x+.5,\y+1.5) node {\p}
};\end{tikzpicture}
]]></latex-image-code>
        </image>
        <p>
            .
            We then proceed to use the tabula recta: since the first character of the key phrase is a <c>T</c>, we look in the row beginning with <c>T</c>; we then find the column beginning with <c>T</c>, as <c>T</c> is the first character of the message. The letter in the <c>T</c><m>^\text{ th }</m> row and <c>T</c><m>^\text{ th }</m> column is <c>M</c>. Proceeding in this manner we obtain the cyphertext:
            <me>
                <c>MOILH OEVGF HLDUX EHJRK ONEGV VWVIR EHELA HHSRE EQDWO H</c>.
            </me>
        </p>
    </subsection>


    <subsection>
        <title>The Enigma Cipher</title>
        <p>
            Perhaps the most famous modern polyalphabetic substitution cipher is Enigma, used by Nazi Germany during World War II to encrypt its military transmissions. The Enigma machines were not computers <mdash /> early versions were machines which used a series of rotors to encode messages between a keyboard and a lampboard, while later machines were modified to print messages directly onto a narrow paper strip.
        </p>

        <p>
            Enigma machines had a varying number of permutation rotors at different stages of the war, as well as a ``plugboard". Each rotor was a plastic disc with 26 spring-loaded electrical contact pins on one side and 26 corresponding contact plates on the other side. Connecting pins on one side to plates on the other was a wiring which corresponds to a permutation of the 26 signals. Assuming a 3-rotor Enigma, the electrical path of a signal would pass from the key to the plugboard, to the entry wheel, then through the three rotors <mdash /> right, middle, then left. Finally, there was an element called a reflector, which acted as an <em>involution</em>, and then the path went through the rotors again, but reversed <mdash /> left, right, middle. The electrical signal then would pass again through the plugboard and to the lamps. Both plugboard and reflector were reconfigurable.
        </p>

        <p>
            Further, when a key was released, the rotation mechanism would engage. The right rotor would step, and upon reaching a notch in its mechanism would make the middle rotor step. This in turn could turn the left rotor in the same way. Of the eight rotors in use during World War II, rotors VI, VII, and VIII each had two such notches, providing an irregular stepping to break up the odometer-style pattern of rotor stepping. The result of this stepping mathematically is equivalent to shifting <em>just the bottom row</em> of the two-line notation for that rotor's permutation by one position to the left. It is this stepping which makes Enigma polyalphabetic <mdash /> the permutation changes with each letter encrypted.
        </p>

        <p>
            A further feature of the Enigma machine is that every setting of rotors and plugboard results in a <em>derangement</em>. This feature was patented prior to World War II, when Enigma was sold commercially, and greatly aided Polish algebraist Marian Rejewski in his work to break the encryption.
        </p>
        <definition>
            <statement>
                <p>
                    A <term>derangement</term> is a permutation with no fixed points.
                </p>
            </statement>
        </definition>
        <p>
            Coupling the use of derangements with the knowledge that the same machine had to encrypt and decrypt the message using the same settings, Rejewski and others were able to devise mathematical theory which allowed the Enigma to be broken. For instance, consider the permutations as follows:
            <md>
                <mrow>  P \amp = \text{ plugboard }</mrow>
                <mrow>  R \amp = \text{ right rotor }</mrow>
                <mrow>  M \amp = \text{ middle rotor }</mrow>
                <mrow>  L \amp = \text{ left rotor }</mrow>
                <mrow>  U \amp = \text{ reflector }</mrow>
            </md>
        </p>

        <p>
            Then we know certain things from permutation theory and the design of the Enigma machine. First, we know that <m>P</m> and <m>U</m> are involutions: <m>P^2 = U^2 = (1)</m>. Further, we know that
            <me>
                E = PRMLUL^{-1}M^{-1}R^{-1}P^{-1}
            </me>
            is a derangement, as is
            <me>
                E_{i,j,k} = P(\rho^i R\rho^{-i})(\rho^j M\rho^{-j})(\rho^k L\rho^{-k})U(\rho^k L^{-1}\rho^{-k})(\rho^j M^{-1}\rho^{-j})(\rho^i R^{-1}\rho^{-i})P^{-1},
            </me>
            the permutation after stepping each rotor the specified number of times. With three rotors installed out of a set of five, 26 different initial rotor settings for each installed rotor, a configurable reflector, and a plugboard with up to ten pairs of letters transposed, the military version of Enigma could be configured to a staggering number of initial settings
            initial settings. Each of these can be considered the ``key phrase."
        </p>

        <p>
            The use of the initial rotor setting was only intended to be used for transmission of the individual message key: the correct code book setting for the rotors would be set, then some ``randomly selected" three-letter <em>message key</em> would be selected. This would be sent through the Enigma twice consecutively. Once this was completed, the rotors were set to the positions of the message key and encoding of the actual message would commence. The message key could be read off the initial rotor settings in normal left-to-right order.
        </p>

        <example>
            <statement>
                <p>
                    The actual rotor wirings <mdash /> and the permutations they produce <mdash /> can be found by a quick web search. Even more interesting is that key pages from the Luftwaffe survived the war and can be found! The key settings for day 30 of Luftwaffe Machine Key no. 649, reproduced from Wikipedia, specifies rotors I, V, and III, with ring settings 14, 09 24. The reflector setting is <c>KM AX PZ GO DI CN BR PV LT EQ HS UW</c>, and the plugboard is to be set to <c>SZ GT DV KU FO MY EW JN IX LQ</c>. Further, we'll use the first of the ground settigns, <c>wny</c>. Suppose I choose my message key to be <c>qzv</c>. I begin by encoding <c>qzv</c> twice under ground setting <c>wny</c>, given the correct initialization.
                </p>
                <figure xml:id="fig_enigma_1" >
                    <caption>The beginning of sending a message indicator using Enigma maps <c>Q</c> to <c>P</c>.</caption>
                    <image xml:id="enigma_1st_char">
                        <latex-image-code><![CDATA[\begin{tikzpicture}[scale = 12/26]
\draw \foreach \x/\c in {1/A, 2/B, 3/C, 4/D, 5/E, 6/F, 7/G, 8/H, 9/I, 10/J, 11/K, 12/L, 13/M, 14/N, 15/O, 16/P, 17/Q, 18/R, 19/S, 20/T, 21/U, 22/V, 23/W, 24/X, 25/Y, 26/Z}{ (\x-0.5,0.5) node {\c}};
\draw (0,-2) node [left] {\(P=\)};
\draw (0, -5) node [left] {\(R=\)};
\draw (0, -8) node [left] {\(M=\)};
\draw (0,-11) node [left] {\(L=\)};
\draw (0,-14) node [left] {\(U=\)};
\draw (0,-3) grid (26,-1)
 \foreach \x in {1,...,26}{(\x-0.5,-1.5) node {\x}}
 \foreach \x/\c in {1/1, 2/2, 3/3, 4/22, 5/23, 6/15, 7/20, 8/8, 9/24, 10/14, 11/21, 12/17, 13/25, 14/10, 15/6, 16/16, 17/12, 18/18, 19/26, 20/7, 21/11, 22/4, 23/5, 24/9, 25/13, 26/19}{(\x-0.5,-2.5) node {\c}};
\draw (0,-6) grid (26,-4)
 \foreach \x in {1,...,26}{(\x-0.5,-4.5) node {\x}}
 \foreach \x/\c in {1/19, 2/17, 3/15, 4/2, 5/4, 6/6, 7/8, 8/10, 9/12, 10/3, 11/16, 12/18, 13/20, 14/24, 15/22, 16/26, 17/14, 18/25, 19/5, 20/9, 21/23, 22/7, 23/1, 24/11, 25/13, 26/21}{(\x-0.5,-5.5) node {\c}};
\draw (0,-9) grid (26,-7)
 \foreach \x in {1,...,26}{(\x-0.5,-7.5) node {\x}}
 \foreach \x/\c in {1/21, 2/16, 3/19, 4/4, 5/14, 6/8, 7/12, 8/24, 9/1, 10/23, 11/13, 12/10, 13/17, 14/15, 15/6, 16/5, 17/3, 18/11, 19/22, 20/26, 21/2, 22/18, 23/7, 24/9, 25/20, 26/25}{(\x-0.5,-8.5) node {\c}};
\draw (0,-12) grid (26,-10)
 \foreach \x in {1,...,26}{(\x-0.5,-10.5) node {\x}}
 \foreach \x/\c in {1/23, 2/25, 3/8, 4/24, 5/21, 6/19, 7/16, 8/1, 9/9, 10/2, 11/18, 12/3, 13/10, 14/5, 15/11, 16/13, 17/6, 18/12, 19/7, 20/4, 21/17, 22/22, 23/26, 24/14, 25/20, 26/15}{(\x-0.5,-11.5) node {\c}};
\draw (0,-15) grid (26,-13)
 \foreach \x in {1,...,26}{(\x-0.5,-13.5) node {\x}}
 \foreach \x/\c in {1/24, 2/18, 3/14, 4/9, 5/17, 6/26, 7/15, 8/19, 9/4, 10/10, 11/13, 12/20, 13/11, 14/3, 15/7, 16/22, 17/5, 18/2, 19/8, 20/12, 21/23, 22/16, 23/21, 24/1, 25/25, 26/6}{(\x-0.5,-14.5) node {\c}};
\draw [->, draw=red] (16.5,0) -- (16.5,-1);
\draw [->, draw=red] (16.25,-3) -- (16.25,-3.25) -- (11.25,-3.25) -- (11.25,-4);
\draw [->, draw=red] (11.25,-6) -- (11.25,-6.25) -- (17.25,-6.25) -- (17.25,-7);
\draw [->, draw=red] (17.25,-9) -- (17.25,-9.25) -- (10.25,-9.25) -- (10.25,-10);
\draw [->, draw=red] (10.25,-12) -- (10.25,-12.25) -- (17.25,-12.25) -- (17.25,-13);
\draw [->, draw=black] (17.25,-15) -- (17.25,-15.5) -- (1.75,-15.5) -- (1.75,-15);
\draw [->, draw=blue] (1.75,-13) -- (1.75,-12.75) -- (9.75,-12.75) -- (9.75,-12);
\draw [->, draw=blue] (9.75,-10) -- (9.75,-9.75) -- (11.75, -9.75) -- (11.75,-9);
\draw [->, draw=blue] (11.75,-7) -- (11.75, -6.75) -- (8.75,-6.75) -- (8.75,-6);
\draw [->, draw=blue] (8.75,-4) -- (8.75,-3.75) -- (23.75,-3.75) -- (23.75,-3);
\draw [->, draw=blue] (23.5,-1) -- (23.5,0);\end{tikzpicture}]]></latex-image-code>
                    </image>

                </figure>
                <p>
                    The electrical pathway traced through the plugboard, rotors, and reflector is demonstrated in <xref ref="fig_enigma_1" autoname="yes" />. After <c>Q</c> is pressed, <c>X</c> lights up. When <c>Q</c> is released, we see that the right-most rotor is not in position to step its neighbor, so only that rotor will step. The next pathway is demonstrated in <xref ref="fig_enigma_2" autoname="yes" />.
                </p>
                <figure xml:id="fig_enigma_2" >
                    <caption>The second character encoding of the same message indicator maps <c>Z</c> to <c>N</c>.</caption>
                    <image xml:id="enigma_2nd_char">
                        <latex-image-code><![CDATA[
\tiny
\begin{tikzpicture}[scale=12/26]
\draw \foreach \x/\c in {1/A, 2/B, 3/C, 4/D, 5/E, 6/F, 7/G, 8/H, 9/I, 10/J, 11/K, 12/L, 13/M, 14/N, 15/O, 16/P, 17/Q, 18/R, 19/S, 20/T, 21/U, 22/V, 23/W, 24/X, 25/Y, 26/Z}{ (\x-0.5,0.5) node {\c}};
\draw (0,-2) node [left] {\(P=\)};
\draw (0, -5) node [left] {\(R=\)};
\draw (0, -8) node [left] {\(M=\)};
\draw (0,-11) node [left] {\(L=\)};
\draw (0,-14) node [left] {\(U=\)};
\draw (0,-3) grid (26,-1)
 \foreach \x in {1,...,26}{(\x-0.5,-1.5) node {\x}}
 \foreach \x/\c in {1/1, 2/2, 3/3, 4/22, 5/23, 6/15, 7/20, 8/8, 9/24, 10/14, 11/21, 12/17, 13/25, 14/10, 15/6, 16/16, 17/12, 18/18, 19/26, 20/7, 21/11, 22/4, 23/5, 24/9, 25/13, 26/19}{(\x-0.5,-2.5) node {\c}};
\draw (0,-6) grid (26,-4)
 \foreach \x in {1,...,26}{(\x-0.5,-4.5) node {\x}}
 \foreach \x/\c in {1/17, 2/15, 3/2, 4/4, 5/6, 6/8, 7/10, 8/12, 9/3, 10/16, 11/18, 12/20, 13/24, 14/22, 15/26, 16/14, 17/25, 18/5, 19/9, 20/23, 21/7, 22/1, 23/11, 24/13, 25/21, 26/19}{(\x-0.5,-5.5) node {\c}};
\draw (0,-9) grid (26,-7)
 \foreach \x in {1,...,26}{(\x-0.5,-7.5) node {\x}}
 \foreach \x/\c in {1/21, 2/16, 3/19, 4/4, 5/14, 6/8, 7/12, 8/24, 9/1, 10/23, 11/13, 12/10, 13/17, 14/15, 15/6, 16/5, 17/3, 18/11, 19/22, 20/26, 21/2, 22/18, 23/7, 24/9, 25/20, 26/25}{(\x-0.5,-8.5) node {\c}};
\draw (0,-12) grid (26,-10)
 \foreach \x in {1,...,26}{(\x-0.5,-10.5) node {\x}}
 \foreach \x/\c in {1/23, 2/25, 3/8, 4/24, 5/21, 6/19, 7/16, 8/1, 9/9, 10/2, 11/18, 12/3, 13/10, 14/5, 15/11, 16/13, 17/6, 18/12, 19/7, 20/4, 21/17, 22/22, 23/26, 24/14, 25/20, 26/15}{(\x-0.5,-11.5) node {\c}};
\draw (0,-15) grid (26,-13)
 \foreach \x in {1,...,26}{(\x-0.5,-13.5) node {\x}}
 \foreach \x/\c in {1/24, 2/18, 3/14, 4/9, 5/17, 6/26, 7/15, 8/19, 9/4, 10/10, 11/13, 12/20, 13/11, 14/3, 15/7, 16/22, 17/5, 18/2, 19/8, 20/12, 21/23, 22/16, 23/21, 24/1, 25/25, 26/6}{(\x-0.5,-14.5) node {\c}};
\draw [->, draw=red] (25.5,0) -- (25.5,-1);
\draw [->, draw=red] (25.25,-3) -- (25.25,-3.25) -- (18.25,-3.25) -- (18.25,-4);
\draw [->, draw=red] (18.25,-6) -- (18.25,-6.25) -- (8.25, -6.25) -- (8.25, -7);
\draw [->, draw=red] (8.25,-9) -- (8.25,-9.25) -- (0.25, -9.25) -- (0.25, -10);
\draw [->, draw=red] (0.25,-12) -- (0.25,-12.25) -- (22.25,-12.25) -- (22.25,-13);
\draw [->, draw=black] (22.25,-15) -- (22.25,-15.5) -- (20.75,-15.5) -- (20.75,-15);
\draw [->, draw=blue] (20.75,-13) -- (20.75,-12.75) -- (4.75,-12.75) -- (4.75,-12);
\draw [->, draw=blue] (4.75,-10) -- (4.75,-9.75) -- (15.75, -9.75) -- (15.75,-9);
\draw [->, draw=blue] (15.75,-7) -- (15.75, -6.75) -- (9.75,-6.75) -- (9.75,-6);
\draw [->, draw=blue] (9.75,-4) -- (9.75,-3.75) -- (13.75,-3.75) -- (13.75,-3);
\draw [->, draw=blue] (13.5,-1) -- (13.5,0);
\end{tikzpicture}
]]>
                        </latex-image-code>
                    </image>

                </figure>
                <p>
                    Further diagrams can be drawn, demonstrating the turning rotors as the message indicator <c>QZVQZV</c> is encrypted to <c>XNCYFT</c>. The rotors are then manually set to positions <c>QZV</c> and the secret message begins being encrypted. If the full message you intercept is
                    <md>
                        <mrow>  \texttt{XNCYF TSIXR VIVGQ MXVFO AHOLR YLZUN EEHDT GOAXT GRYVO}</mrow>
                        <mrow>  \texttt{ALGPV OCBAK HTDVB VLFKD QPPKV UAYRZ ANYGY IHHFE GFJM~}</mrow>
                    </md>
                    can you decipher it, knowing my initial settings of the Enigma?
                </p>
            </statement>
        </example>
    </subsection>

</section>
