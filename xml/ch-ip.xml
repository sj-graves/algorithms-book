<chapter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="c-IP">
    <title>Sage: Introductory programming</title>


    <objectives>
        <ol type="1">
            <li>Define the <c>for... in...:</c> iteration structure.</li>
            <li>Discuss list comprehension.</li>
            <li>Discuss conditional structures and expressions.</li>
            <li>Discuss exceptions and the <c>try:... except:...</c> error handler.</li>
        </ol>
    </objectives>
    <introduction>
        <p>
            In <xref ref="c-SB"/> we began using Sage as a high-powered Calculator, with the additional power of processing strings and lists of data; if this is all we wanted to do we would be better served to work out all our problems with pencil and paper. Computers really become useful when it is time to solve a problem by repeating a short sequence of basic steps a vast number of times. Our first method of doing this is called <term>iteration</term>. Following an introduction to iteration, we will discuss <term>conditional statements</term> which allow programs to perform different actions on different steps of iteration, and finally we will end the chapter with some brief words about the flow of a program and how it can be interrupted.
        </p>
    </introduction>
    <xi:include  href="sec-ip-iteration.xml" />
    <xi:include  href="sec-ip-comprehension.xml" />
    <xi:include  href="sec-ip-conditional.xml" />
    <xi:include  href="sec-ip-exceptions.xml" />

</chapter>
