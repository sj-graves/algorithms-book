<section xml:id="s-LI-TG">
    <title>Tuples and generators</title>
    <subsection>
        <title>
            Tuples
        </title>
        <p>
            A <c>tuple</c> is another compound data type which looks almost exactly like a <c>list</c>, but is immutable. Elements of tuples can be any data type, but we cannot assign new values to individual indices or slices in a <c>tuple</c> without overwriting the entire value.
        </p>
        <sage>
            <input>
                spam = (1, 2, 3, 4)
                print type(spam)
                spam[3] = 97
            </input>
        </sage>

        <p>
            <em>Type conversion</em> between <c>list</c> and <c>tuple</c> is easy.
        </p>
        <sage>
            <input>
                spam = (1, 2, 3, 4)
                eggs = list(spam)
                print spam, "is a", type(spam)
                print eggs," is a", type(eggs)

            </input>
        </sage>
    </subsection>
    <subsection>
        <title>
            Generators
        </title>
        <p>
            A notable distinction between <c>tuple</c> and <c>list</c> is in the use of comprehensions: attempting to perform a <em>tuple comprehension</em> will create a <c>generator</c> object, which is technically like a <c>range</c> object and not either a <c>list</c> or a <c>tuple</c>. It is still the case that a <c>generator</c> is immutable.
        </p>
        <sage>
            <input>
                spam = [x^2 for x in range(10)]
                eggs = (x^2 for x in range(10))
                print spam, "is a", type(spam)
                print eggs, "is a", type(eggs)

                for yolk in eggs:
                    print yolk,

                eggs[3]=5
            </input>
        </sage>
    </subsection>
</section>
