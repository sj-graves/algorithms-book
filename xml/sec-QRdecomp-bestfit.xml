<section xml:id="sec-QRdecomp-BestFit">
    <title>Application of least squares to curves of best fit</title>
    <!--p>
The method of least squares applies directly to the originally stated problem of determining a curve of best fit; rather than working an example with a large number of points, let's suppose we have a set of five points through which we desire to find the best-fit parabola<fn>The curve represented by a polynomial of degree <m>n</m> can be determined uniquely by a set of exactly <m>n+1</m> points; if additional points are specified, the system (in general) becomes overdetermined and inconsistent.</fn>.
</p-->
    <p>
        The method of least squares applies directly to the originally stated problem of determining a curve of best fit through a collection of points. In fact, a set <m>\set{(x_i,y_i):i\in\set{0,1,2,\ldots,n}}</m> of points in the plane is generally sufficient to uniquely determine a polynomial <m>p(x)</m> of degree <m>n</m> such that <m>p(x_i)=y_i</m> for each <m>i\in\set{0,1,2,\ldots,n}</m>. If a polynomial <m>q(x)</m> of degree less than <m>n</m> is desired, the required system of equations is most often <em>overdetermined</em> and therefore inconsistent. We will demonstrate by producing a best-fit parabola through a set of five points.
    </p>

    <p>
        Suppose we want to best fit a parabola to the points <m>(-2,1)</m>, <m>(-1,2)</m>, <m>(0,-2)</m>, <m>(1,1)</m>, and <m>(3,3)</m>. If such a parabola were to exist, its quadratic equation <m>y=a_0+a_1x+a_2x^2</m> would need to simultaneously satisfy
        <men>
            \left\{\begin{aligned}
                a_0 - 2a_1 + 4a_2 \amp =  1 \\
                a_0 - a_1 + a_2   \amp =  2 \\
                a_0               \amp = -2 \\
                a_0 + a_1 + a_2   \amp =  1 \\
                a_0 + 3a_1 + 9a_2 \amp =  3
            \end{aligned}\right.
        </men>.
        These can be represented by

        <men>
            A\vec{x} = 
            \begin{bmatrix}
            1 \amp  -2 \amp  4 \\
            1 \amp  -1 \amp  1 \\
            1 \amp  0 \amp  0 \\
            1 \amp  1 \amp  1 \\
            1 \amp  3 \amp  9
            \end{bmatrix} 
            \begin{bmatrix}
            x_0 \\ x_1 \\ x_2
            \end{bmatrix} = 
            \begin{bmatrix}
            1 \\ 2 \\ -2 \\ 1 \\ 3
            \end{bmatrix} = \vec{b}.
        </men>
    </p>

    <p>
        So we obtain an inconsistent system of equations which can be directly translated to the least squares problem, the solution to which gives the coefficients of the parabola of best fit. We obtain
        <md>
            <mrow>  A^TA \amp = \begin{bmatrix}5 \amp  1 \amp  15</mrow>
            <mrow>  1 \amp  15 \amp  19</mrow>
            <mrow>  15 \amp  19 \amp  99
                \end{bmatrix} \amp 
                A^T\vec{b} \amp = \begin{bmatrix}5</mrow>
            <mrow>  6</mrow>
            <mrow>  34\end{bmatrix},</mrow>
        </md>
        so augmenting gives
        <md>
            <mrow>  \left[\begin{array}{rrr|r}
                5 \amp  1 \amp  15 \amp  5 \\
                1 \amp  15 \amp  19 \amp  6 \\
                15 \amp  19 \amp  99 \amp  34
                \end{array} \right]\amp \xto{\text{Gauss-Jordan}}
                \left[\begin{array}{rrr|r}
                1 \amp  0 \amp  0 \amp  -\frac{67}{679} \\
                0 \amp  1 \amp  0 \amp  -\frac{85}{1358} \\
                0 \amp  0 \amp  1 \amp  \frac{503}{1358}
                \end{array} \right].</mrow>
        </md>
    </p>

    <p>
        Thus the graph of
        <me>
            y=-\frac{67}{679}-\frac{85}{1358}x+\frac{503}{1358}x^2
        </me>
        is the best-fit parabola for the five given points.
    </p>
    <sage>
        <input>
            pts=[(-2,1),(-1,2),(0,-2),(1,1),(3,3)]

            A = matrix([[1,x,x^2] for x,y in pts])
            b = vector([y for x,y in pts])
            ATA = A.transpose()*A
            ATb = A.transpose()*b

            a = ATA.inverse() * ATb
            x = var('x')
            p(x) = a.dot_product(vector([x^i for i in range(3)]))

            list_plot(pts, size=50,aspect_ratio=1)+plot(p(x),(-2,3),color='red',legend_label="$p(x) = "+latex(p(x))+"$")
        </input>
    </sage>

</section>
