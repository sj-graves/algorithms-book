<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="s-c-ic">
    <title>Conditionals and iteration</title>
    <introduction>
        <title>Boolean logic</title>
        <p>
            One of the fundamental data types which we haven't discussed is the <term>Boolean</term> data type.
        </p>
        <technology xml:id="tech-c-ic-bool">
            <title><c>bool</c></title>
            <statement>
                Variables of type <c>bool</c> take one of two values: either <c>True</c> or <c>False</c>.
            </statement>
        </technology>
        <p>
            All of symbolic logic becomes available if you combine variables of type <c>bool</c> with the <term>logical operators</term>.
        </p>
        <definition xml:id="def-c-ic-log_ops">
            <p>
                The simple logical operators are <term>and</term>, <term>or</term>, and <term>not</term>. It is commonly useful to explain the values of the logical operators using a <term>truth table</term>.
            </p>
            <table>
                <title>Truth table of the simple logical operators</title>
                <tabular  top="major" bottom="minor">
                    <col halign="center" />
                    <col halign="center" />
                    <col halign="center" />
                    <col halign="center" />
                    <col halign="center" />
                    <row bottom="medium">
                        <cell><m>p</m></cell>
                        <cell><m>q</m></cell>
                        <cell>not <m>p</m></cell>
                        <cell><m>p</m> and <m>q</m></cell>
                        <cell><m>p</m> or <m>q</m></cell>
                    </row>
                    <row>
                        <cell>True</cell>
                        <cell>True</cell>
                        <cell>False</cell>
                        <cell>True</cell>
                        <cell>True</cell>
                    </row>
                    <row>
                        <cell>True</cell>
                        <cell>False</cell>
                        <cell>False</cell>
                        <cell>False</cell>
                        <cell>True</cell>
                    </row>
                    <row>
                        <cell>False</cell>
                        <cell>True</cell>
                        <cell>True</cell>
                        <cell>False</cell>
                        <cell>True</cell>
                    </row>
                    <row>
                        <cell>False</cell>
                        <cell>False</cell>
                        <cell>True</cell>
                        <cell>False</cell>
                        <cell>False</cell>
                    </row>
                </tabular>
            </table>
        </definition>
        <technology xml:id="tech-c-ic-log_ops">
            <title><c>bool</c> operators</title>
            <statement>
                The logical operators for and, or, and not in Sage are respectively <c>and</c>, <c>or</c>, and <c>not</c>. What did you expect?
            </statement>
        </technology>
    </introduction>
    <subsection xml:id="ss-c-ic-cond">
        <title>Conditional programming</title>
        <p>
            A program that performs the same task regardless of the value of its input is very limited.
        </p>
    </subsection>
    <conclusion>
        This is a fake conclusion.
    </conclusion>
</section>