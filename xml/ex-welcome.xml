<?xml version="1.0" encoding="utf-8"?>
<exercises xml:id="ex-w" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Welcome Exercises</title>
    <introduction>
        <p>
            These exercises are intended to be challenging for those students who have never before written a computer program. By analogy with riding a bicycle, the best way to learn to program is to get on a computer and start pedaling!
        </p>
        <p>
            To work the computational exercises in this section, create a new working folder called <c>~/working/ex-1/</c>. Then if you have questions, you can easily interact with your instructor from within the Chat window.
        </p>
    </introduction>
    <exercisegroup>
        <title>CoCalc exercises</title>
        <introduction>
            <p>
                These exercises specifically refer to features of CoCalc possibly not present in other Sage installations.
            </p>
        </introduction>
        <exercise>
            <title>Jupyter notebooks</title>
            <idx><h>CoCalc</h><h>Jupyter notebooks</h></idx>
            <introduction>
                In addition to the standard Sage worksheet, CoCalc now allows users to develop using 
                <url href="http://jupyter.org">Jupyter</url> notebooks. The primary benefit to using Jupyter notebooks rather than Sage worksheets is that the implementation of <term>interactive features</term> is much more seamless in Jupyter than in the Sage worksheet. A major sacrifice of the Jupyter notebook is the apparent loss of the <latex /> interface!
            </introduction>
            <task>
                Create a Jupyter notebook called <c>ex-jupyter.ipynb</c>
            </task>
            <task>
                <p>
                    In your new Jupyter notebook, replicate the following code:
                </p>
                <sidebyside>
                    <program language="sage">
                        <input>
                            count = 1
                            print "{i}: Input an integer".format(i = count)
                            while count &lt; 20:
                                in_val = raw_input()
                                try:
                                    print("We have '%d' as a successful integer input on attempt #%d!"%(int(in_val),count))
                                    break
                                except:
                                    count = count + 1
                                    print "{i}:That's no integer. Try again.".format(i = count)
                        </input>
                    </program>
                </sidebyside>
            </task>
            <conclusion>
                The notebook interface of a standalone Sage installation now uses the Jupyter notebook server by default.
            </conclusion>
        </exercise>
    </exercisegroup>
    <!--     <xi:include href="./proj-welcome.xml" /> -->
</exercises>